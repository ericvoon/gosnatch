 {{template "header"}}

    <div class="container">


      <div class="row season-1">
        <div class="col-sm-12">
          <div class="season-wrapper ">
            <div class="btn-group col-sm-12" role="group" aria-label="..." style="margin-bottom: 20px">
              <div class="row">
                <button data-toggle="modal" data-target="#addExistingSeries" type="button" class="btn btn-default col-sm-9"><i class="fa fa-hdd-o fa-lg"></i> {{ T "import_series_button" }}</button>
                <button type="button" class="btn btn-default col-sm-3"><i class="fa fa-play fa-lg"></i> {{ T "add_series_button" }}</button>
              </div>
            </div>
            <div class="header">


              <h2> {{ T "search_series" }}</h2>
            </div>
            <div class="form-group">
              <div class="input-group">
                <div class="input-group-addon"><i class="glyphicon glyphicon-search"></i></div>
                <input type="text" class="form-control" id="term" placeholder='{{ T "search_series" }}...'>
              </div>
               <p class="text-center lead">{{ T "search_series_help" }}</p>
            </div>

            <div class="select-series" id="load-series-data">

            </div>
          </div>
        </div>
      </div>



    </div><!-- /.container -->
    <div id="ohsnap"></div>

    <div class="modal fade" id="addExistingSeries">
      <div class="modal-dialog  modal-lg">
        <div class="modal-content">
          <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-label="{{ T "btn_close" }}"><span aria-hidden="true">&times;</span></button>
            <h4 class="modal-title">{{ T "select_folder_head" }}</h4>
          </div>
          <div class="modal-body">
            <div class="alert alert-info"><p>{{ T "select_folder_help" }}</p></div>

            <div class="form-group">
              <div class="input-group">
                <div class="input-group-addon"><i class="fa fa-folder-open-o"></i></div>
                <input autocomplete="off" type="text" class="form-control" id="seriesPath" placeholder="Enter path to folder that contains your shows">
                <div class="input-group-btn">
                  <button data-toggle="tooltip" data-placement="top" title="Browse" id="browsePath" type="submit" class="btn btn-primary"><i class="fa fa-folder-open-o"></i></button>
                </div>
                <div class="input-group-btn">
                  <button data-toggle="tooltip" data-placement="top" title="Save path" id="addRootPath" type="submit" class="btn  btn-success"><i class="fa fa-check"></i></button>
                </div>
              </div>
            </div>

            <h3>{{ T "recent_folders" }}</h3>
            <table class="table" id="rootFolders">
            </table>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-primary" id="fireExisting" data-dismiss="modal">{{ T "btn_close" }}</button>
          </div>
        </div><!-- /.modal-content -->
      </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->

    <div class="modal fade" id="fileBrowser">
      <div class="modal-dialog  modal-lg">
        <div class="modal-content">
          <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            <h4 class="modal-title">File Browser</h4>
          </div>
          <div class="modal-body">
            <div class="form-group">
              <input autocomplete="off" type="text" class="form-control input-block" id="curPath" placeholder="">
            </div>
              <table class="table table-striped" id="browseFolders">
                <thead>
                  <tr>
                    <td class="col-sm-1"></td>
                    <td>Name</td>
                  </tr>
                </thead>
                <tbody>
                </tbody>
              </table>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-primary" data-dismiss="modal">{{ T "btn_close" }}</button>
            <button type="button" class="btn btn-success" data-dismiss="modal">{{ T "btn_ok" }}</button>
          </div>
        </div><!-- /.modal-content -->
      </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->

    <!-- Bootstrap core JavaScript
    ================================================== -->
    <!-- Placed at the end of the document so the pages load faster -->
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js"></script>

    <script src="/assets/js/vendor/jquery.ba-throttle-debounce.min.js"></script>
    <script src="/assets/js/bootstrap.min.js"></script>
    <script src="/assets/js/external/ohsnap.js"></script>
    <script src="/assets/js/external/bootstrap3-typeahead.min.js"></script>
    <script src="/assets/js/main.js"></script>

    {{template "script"}}

    <script>

    var presets = [];
    var folders = [];


    function scanExisting(folders) {
        console.log(folders)
        $.getJSON("/api/filesystem", { path: folders}, function(data) {
          console.log(data)
          for (var i = data.Directories.length - 1; i >= 0; i--) {
            console.log(data.Directories[i].Name)
            $.getJSON("/api/series/lookup/" + data.Directories[i].Name, {limit: 2}, renderAddSeries )
          };
        })
    }

    $('#browsePath').click(function(){
      $('#fileBrowser').modal()
    })

    $.getJSON("/api/filesystem", { path: "/" }, function(data) {
      html = ''
      for (var i = data.Directories.length - 1; i >= 0; i--) {
        html = html + '<tr class="browse-path" data-path="' + data.Directories[i].Path + '"><td><i class="fa fa-folder-o"></i></td><td>' + data.Directories[i].Name + '</td></tr>';
      };
      $('#browseFolders tbody').html(html)
    })

    $('#fileBrowser').on('hidden.bs.modal', function (e) {
      $('#seriesPath').val($('#curPath').val())
    })

    $(document).on("click", ".browse-path", function(){
      curret = $(this).data("path");
      oneUp = curret.split("/").slice(0,-1).join("/")
      console.log(curret, oneUp)
      $.getJSON("/api/filesystem", { path: curret }, function(data) {
        $('#curPath').val(curret)
        // $('#seriesPath').val(curret)
        html = '<tr class="browse-path" data-path="' + oneUp + '"><td><i class="fa fa-level-up"></i></td><td>...</td></tr>'
        if (data.Directories) {
          for (var i = data.Directories.length - 1; i >= 0; i--) {
          html = html + '<tr class="browse-path" data-path="' + data.Directories[i].Path + '"><td><i class="fa fa-folder-o"></i></td><td>' + data.Directories[i]  .Name + '</td></tr>';
        };
      } else {
        html = html +'<tr><td></td><td></td></tr>';
      }

        $('#browseFolders tbody').html(html)
      })
    });


    $('#addRootPath').click(function(){
      $('#seriesPath').val();
       $.post("/api/addfolder", JSON.stringify({path: $('#seriesPath').val()}), function(data){
         console.log(data)
         html = ''
         if( data || data.length > 0) {
          for (var i = data.length - 1; i >= 0; i--) {
            html = html + '<tr><td>' + data[i].Path + '</td><td><i data-id="' + data[i].Id + '" class="delete-folder fa fa-times text-danger"></i></td></tr>'
          };
          folders = data
          $('#rootFolders').html(html)
         }
      })
    });

    $('#fireExisting').click(function() {
       scanExisting($('#seriesPath').val())
    })

    $('#seriesPath').typeahead({
      source: function (query, process) {
          return $.getJSON("/api/filesystem", { path: query }, function (data) {
              x = []
              if (data.Directories) {
                for (var i = data.Directories.length - 1; i >= 0; i--) {
                  console.log(data)
                  x.push(data.Directories[i].Path)
                };
              }
              return process(x);
          });
      }
    });

    $.getJSON("/api/preset", function(data){
      for (var i = data.length - 1; i >= 0; i--) {
        presets.push(data[i]);
      };
    })

    $.getJSON("/api/folder", function(data){
      html = ''
      for (var i = data.length - 1; i >= 0; i--) {
        folders.push(data[i]);
        html = html + '<tr><td>' + data[i].Path + '</td><td><i data-id="' + data[i].Id + '" class="delete-folder fa fa-times text-danger"></i></td></tr>'
      };
      $('#rootFolders').html(html)
    })

    function languageHTML() {
      return '<div class="col-sm-2 form-group"><label for="language">Language</label><select name="language" class="language form-control"><option value="de">German</option><option value="en">English</option></select></div>'
    }

    function folder(id) {
      prehtml = '<div class="col-sm-4 form-group"><label for="quality">Path</label><select name="path" id="preset-'+ id +'" class="path form-control">'
      for (var i = folders.length - 1; i >= 0; i--) {
        prehtml = prehtml + '<option value="' + folders[i].Path +'">' + folders[i].Path + "</option>"
      };
      prehtml = prehtml + '</select></div>'
      return  prehtml
    }

    function preset(id){
      prehtml = '<div class="col-sm-2 form-group"><label for="quality">Quality</label><select name="quality" id="preset-'+ id +'" class="quality form-control">'
      for (var i = presets.length - 1; i >= 0; i--) {
        prehtml = prehtml + '<option value="' + presets[i].Id +'">' + presets[i].Name + "</option>"
      };
      prehtml = prehtml + '</select></div>'
      return  prehtml
    }

    function renderAddSeries(data){


        new_html = '<hr />'

        if (!data.length || data.error) {
          new_html = '<div class="row"><div class="col-sm-12 text-center"><h2>' + data.error + '</h2></div></div>'
        } else {

          for (var i = 0; i < data.length; i++) {
          new_html = new_html + '<div class="search-result-block"><div class="row"><div class="col-sm-2"><img src="https://tvdb.gosnatch.me/banners/' + data[i].Poster + '" class="img-responsive hidden-xs"><img src="https://tvdb.gosnatch.me/banners/' + data[i].Banner + '" class="img-responsive visible-xs"></div><div class="col-sm-8"><h2>' + data[i].SeriesName + '<span class="hidden-xs"> (' + data[i].FirstAired + ')</span></h2><p>' + data[i].Overview + '</p><div class="add-info-wrapper row">'

          new_html = new_html + folder(data[i].Id) + preset(data[i].Id) + languageHTML() + '<div class="col-sm-2 form-group"><label></label><button class="btn btn-success x-add" id="' + data[i].Id +'"><i class="fa fa-plus"></i> Add </button></div></div></div></div></div>'
        }


        }

        new_html = new_html + "<hr />"

        $('#load-series-data').append(new_html);

        console.log(data);

    }

    $(document).on("click", ".x-add", function(){

      postdata = {
        TvdbId: parseInt($(this).attr("id")),
        language: $(this).parents(".add-info-wrapper").find('.language').val(),
        quality: parseInt($(this).parents(".add-info-wrapper").find('.quality').val()),
        folder: $(this).parents(".add-info-wrapper").find('.path').val()
      }

      $.post("/api/addshow", JSON.stringify(postdata), function(data){
          if (data.satus == "success") {
            ohSnap(data.message, 'success');
          } else {
            ohSnap(data.message, 'danger');
          }

      })
    });

    $('#term').keypress(function() {
      if(!$('.spinner').length) {
        $('#load-series-data').html('<div class="row"><div class="col-sm-12 text-center">' + spinner +'</div></div>');
      }
    });

    $('#term').keyup( $.debounce( 1000, function() {
      $('#load-series-data').html('');
      $.getJSON("/api/series/lookup/" + $(this).val(),  renderAddSeries )
    }));
    </script>
  </body>
</html>
